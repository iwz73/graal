group = "com.github.titovart.graal"
version = "0.1.0"

buildscript {

    ext {
        kotlinVersion = "1.2.30"
        springBootVersion = "2.0.0.RELEASE"
        gradleDockerVersion = "1.2"
    }

    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/milestone" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.1"
    }
}

apply {
    plugin "application"
    plugin "kotlin"
    plugin "kotlin-spring"
    plugin "kotlin-jpa"
    plugin "org.springframework.boot"
    plugin "io.spring.dependency-management"
    plugin "org.junit.platform.gradle.plugin"
}


sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = "com.github.titovart.graal.user.UserServiceApplication"

jar {
    baseName = "user-service"
    group = project.group
    version = project.version
    manifest {
        attributes "Main-Class": "com.github.titovart.graal.user.UserServiceApplication"
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RC2"
    }
}

dependencies {
    compile project(":spring-secure-services")

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")

    compile("com.h2database:h2")

    compile("org.jetbrains.kotlin:kotlin-stdlib")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("org.jetbrains.kotlin:kotlin-test-junit")

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude module: "junit"
    }
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
}
